{
	"name": "dimensionflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "salescustomer",
						"type": "DatasetReference"
					},
					"name": "customerstream"
				},
				{
					"dataset": {
						"referenceName": "salesstore",
						"type": "DatasetReference"
					},
					"name": "storestream"
				},
				{
					"dataset": {
						"referenceName": "ProductionProduct",
						"type": "DatasetReference"
					},
					"name": "ProductStream"
				},
				{
					"dataset": {
						"referenceName": "ProductionModel",
						"type": "DatasetReference"
					},
					"name": "ProductModel"
				},
				{
					"dataset": {
						"referenceName": "ProductSubCategory",
						"type": "DatasetReference"
					},
					"name": "Productsubcategory"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dimcustomer",
						"type": "DatasetReference"
					},
					"name": "Dimcustomer"
				},
				{
					"dataset": {
						"referenceName": "AzureSynapseAnalyticsTable1",
						"type": "DatasetReference"
					},
					"name": "DimProductStream"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "mappingcolumns"
				},
				{
					"name": "Removenulls"
				},
				{
					"name": "ProductJionProductModel"
				},
				{
					"name": "ProductJIonPRodcutsubcategory"
				},
				{
					"name": "ColumnSelect"
				},
				{
					"name": "Conditions"
				},
				{
					"name": "surrogateKey1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as integer,",
				"          PersonID as integer,",
				"          StoreID as integer,",
				"          TerritoryID as integer,",
				"          AccountNumber as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> customerstream",
				"source(output(",
				"          BusinessEntityID as integer,",
				"          Name as string,",
				"          SalesPersonID as integer,",
				"          Demographics as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> storestream",
				"source(output(",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          MakeFlag as boolean,",
				"          FinishedGoodsFlag as boolean,",
				"          Color as string,",
				"          SafetyStockLevel as integer,",
				"          ReorderPoint as integer,",
				"          StandardCost as decimal(19,4),",
				"          ListPrice as decimal(19,4),",
				"          Size as string,",
				"          SizeUnitMeasureCode as string,",
				"          WeightUnitMeasureCode as string,",
				"          Weight as decimal(8,2),",
				"          DaysToManufacture as integer,",
				"          ProductLine as string,",
				"          Class as string,",
				"          Style as string,",
				"          ProductSubcategoryID as integer,",
				"          ProductModelID as integer,",
				"          SellStartDate as timestamp,",
				"          SellEndDate as timestamp,",
				"          DiscontinuedDate as timestamp,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ProductStream",
				"source(output(",
				"          ProductModelID as integer,",
				"          Name as string,",
				"          CatalogDescription as string,",
				"          Instructions as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ProductModel",
				"source(output(",
				"          ProductSubcategoryID as integer,",
				"          ProductCategoryID as integer,",
				"          Name as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Productsubcategory",
				"customerstream, storestream join(StoreID == BusinessEntityID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          CustomerID,",
				"          StoreID,",
				"          BusinessEntityID,",
				"          Name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> mappingcolumns",
				"mappingcolumns alterRow(updateIf(isNull(BusinessEntityID))) ~> Removenulls",
				"ProductStream, ProductModel join(ProductStream@ProductModelID == ProductModel@ProductModelID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> ProductJionProductModel",
				"ProductJionProductModel, Productsubcategory join(ProductStream@ProductSubcategoryID == Productsubcategory@ProductSubcategoryID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> ProductJIonPRodcutsubcategory",
				"ProductJIonPRodcutsubcategory select(mapColumn(",
				"          ProductID,",
				"          ProductName = ProductStream@Name,",
				"          SafetyStockLevel,",
				"          ProductSubcategoryID = ProductStream@ProductSubcategoryID,",
				"          ProductModelID = ProductModel@ProductModelID,",
				"          ProductModelName = ProductModel@Name,",
				"          ProductSubcategoryName = Productsubcategory@Name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> ColumnSelect",
				"ColumnSelect alterRow(deleteIf(isNull(ProductModelID))) ~> Conditions",
				"Conditions keyGenerate(output(ProductSK as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"Removenulls sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CustomerID as integer,",
				"          StoreID as integer,",
				"          BusinessEntityID as integer,",
				"          StoreName as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          CustomerID,",
				"          StoreID,",
				"          BusinessEntityID,",
				"          StoreName = Name",
				"     )) ~> Dimcustomer",
				"surrogateKey1 sink(allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     input(",
				"          ProductSK as integer,",
				"          ProductID as integer,",
				"          ProductModelID as integer,",
				"          ProductSubcategoryID as integer,",
				"          ProductName as string,",
				"          SafetyStockLevel as integer,",
				"          ProductModelName as string,",
				"          ProductSubCategoryName as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     preSQLs:['SET IDENTITY_INSERT DimProduct on'],",
				"     postSQLs:['SET IDENTITY_INSERT DimProduct off'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ProductID,",
				"          ProductModelID,",
				"          ProductSubcategoryID,",
				"          ProductName,",
				"          SafetyStockLevel,",
				"          ProductModelName,",
				"          ProductSubCategoryName = ProductSubcategoryName,",
				"          ProductSK",
				"     )) ~> DimProductStream"
			]
		}
	}
}